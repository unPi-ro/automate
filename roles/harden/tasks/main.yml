---
# https://gist.github.com/rjhansen/67ab921ffb4084c865b3618d6955275f#mitigations
- name: securing own .gnupg directory
  file:
    dest: ~/.gnupg
    mode: u=rwx,g=,o=
    state: directory

- name: correcting the dirmngr configuration
  blockinfile:
    path: ~/.gnupg/dirmngr.conf
    create: yes
    backup: yes
    block: |
      keyserver hkps://keys.openpgp.org

- name: shutting down all dirmngr processes
  shell: pkill dirmngr || true

# via https://stribika.github.io/2015/01/04/secure-secure-shell.html
- name: hardening the SSH client configuration
  blockinfile:
    path: /etc/ssh/ssh_config
    create: yes
    backup: yes
    block: |
      Host *
          UseRoaming no
          KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256
          PubkeyAuthentication yes
          PasswordAuthentication no
          ChallengeResponseAuthentication no
          HostKeyAlgorithms ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,ssh-rsa
          Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
          MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com

- name: hardening the SSHd server configuration
  blockinfile:
    path: /etc/ssh/sshd_config
    create: yes
    backup: yes
    block: |
      KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256
      Protocol 2
      HostKey /etc/ssh/ssh_host_ed25519_key
      HostKey /etc/ssh/ssh_host_rsa_key
      PubkeyAuthentication yes
      PasswordAuthentication no
      ChallengeResponseAuthentication no
      Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
      MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com

- name: regenerating SSHd server keys
  shell: |
    cd /etc/ssh
    rm ssh_host_*key*
    ssh-keygen -t ed25519 -f ssh_host_ed25519_key -N "" < /dev/null
    ssh-keygen -t rsa -b 4096 -f ssh_host_rsa_key -N "" < /dev/null
    touch .harden
  args:
    creates: /etc/ssh/.harden
  register: delkeys

- name: restarting SSHd
  service:
    name: ssh
    state: restarted

- name: "purge the locally cached SSH server key for {{ inventory_hostname }}"
  connection: local
  shell: "ssh-keygen -R {{ inventory_hostname }}"
  when: delkeys is changed

- name: "purge the locally cached SSH server key for {{ inventory_hostname }} IPv4"
  connection: local
  shell: "ssh-keygen -R $(host {{ inventory_hostname }} | grep 'has address' | cut -d' ' -f4)"
  when: delkeys is changed
