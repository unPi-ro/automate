---
- name: "initializing webserver names"
  set_fact: server_names=""
  when: app.sites is not defined

- name: "populating webserver names with {{ app.sites }}"
  set_fact: server_names="{{ app.sites }}"
  when: app.sites is defined

- name: "populating webserver names from {{ app.name }} if server_names"
  set_fact: server_names="{{ server_names }} {{ item }} www.{{ item }}"
  when: app.sites is not defined and server_names != ""
  with_items:
    - "{{ app.name.split(' ') }}"

- name: "populating webserver names from {{ app.name }}"
  set_fact: server_names="{{ item }} www.{{ item }}"
  when: app.sites is not defined and server_names == ""
  with_items:
    - "{{ app.name.split(' ') }}"

- name: "populating webserver names from aliases if any and server_names"
  set_fact: server_names="{{ server_names }} {{ item }} www.{{ item }}"
  when: app.alias is defined and server_names != ""
  with_items:
    - "{{ app.alias.split(' ') }}"

- name: "populating webserver names from aliases if any"
  set_fact: server_names="{{ item }} www.{{ item }}"
  when: app.alias is defined and server_names == ""
  with_items:
    - "{{ app.alias.split(' ') }}"

- name: "initializing (test) webserver names"
  set_fact:
    server_names: "{{ inventory_hostname }} www1{{ inventory_hostname }} www2{{ inventory_hostname }} www3{{ inventory_hostname }}"
  when: certdebug|bool
  
- name: "resolving {{ inventory_hostname }} to its IPv4"
  set_fact: this_server_ipv4="{{ lookup('dig', inventory_hostname) }}"

- name: "ensuring that webserver names resolve to {{ this_server_ipv4 }}"
  assert:
    that:
      - "this_server_ipv4 in lookup('dig', item)"
    fail_msg: "{{ item }} MUST resolve to {{ this_server_ipv4 }}"
    success_msg: "{{ item }} does resolve to {{ this_server_ipv4 }}"
  loop: "{{ server_names.split(' ') }}"
